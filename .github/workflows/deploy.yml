name: CI/CD Pipeline

on:
  push:
    branches: [vps-fixes, main]
  workflow_dispatch:

concurrency:
  group: gargofx-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Prepare upload folders
        run: |
          mkdir -p public/uploads/posts
          mkdir -p public/uploads/featured-posts
          mkdir -p public/uploads/logo-slider

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          MONGODB_DBNAME: ${{ secrets.MONGODB_DBNAME }}
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}

      - name: Debug build output
        run: |
          echo "üìÇ pwd: $(pwd)"
          echo "üìÇ Top-level folders:"
          find . -maxdepth 1 -type d | sort
          [ -d ./.next ] || (echo "‚ùå ./.next missing" && exit 1)
          [ -d ./public ] || (echo "‚ùå ./public missing" && exit 1)
          echo "‚úÖ build artifacts present"

      - name: Pack artifact (exclude uploads)
        run: |
          tar -czf release.tgz \
            --exclude='public/uploads/**' \
            .next public package.json package-lock.json

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gargofx-release
          path: release.tgz
          if-no-files-found: error
          retention-days: 7

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: gargofx-release
          path: .

      - name: Ensure VPS target exists (and log)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo "üìç $(hostname)"
            mkdir -p /home/deploy/gargofx
            ls -al /home/deploy/gargofx || true

      - name: Upload tarball
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: release.tgz
          target: /home/deploy/gargofx
          debug: true

      - name: Extract & restart (PM2)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -e
            cd /home/deploy/gargofx
            echo "üì¶ Extracting release.tgz"
            tar -xzf release.tgz
            rm -f release.tgz
            echo "üìú public/uploads preserved:"
            ls -al public/uploads || echo "uploads missing (first deploy?)"
            pm2 reload gargofx --update-env || pm2 start npm --name "gargofx" -- run start
            pm2 save